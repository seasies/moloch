shared:
    settings:
        slack:
            channels:
                - moloch
            statuses:
                - FAILURE
                - ABORTED
    annotations:
        beta.screwdriver.cd/cpu: HIGH
        beta.screwdriver.cd/ram: HIGH

    environment:
        MOLOCH_COPY_BRANCH: "origin/master"
        MOLOCH_FILE_NAME: "master"
        GIT_SHALLOW_CLONE: false
        ASAN_OPTIONS: "fast_unwind_on_malloc=0"

jobs:
    centos-6:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-6:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: scl enable devtoolset-7 python27 "./easybutton-build.sh --daq --pfring --rminstall"
            - test-capture: (cd tests ; ./tests.pl)
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: scl enable devtoolset-7 python27 "make install"
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js | tr "-" "_"`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  scl enable rh-ruby23 "/opt/rh/rh-ruby23/root/usr/local/bin/fpm -s dir -t rpm -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install 'release/afterinstall.sh' --url "https://molo.ch" --description 'Moloch Full Packet System' -d perl-libwww-perl -d perl-JSON -d ethtool -d libyaml-devel /data/moloch"
                  scl enable python27 "aws s3 cp --quiet moloch*.x86_64.rpm s3://files.molo.ch/moloch-${MOLOCH_FILE_NAME}.centos6.x86_64.rpm --acl public-read"
                  scl enable python27 "aws s3api put-object-acl --bucket files.molo.ch --key moloch-${MOLOCH_FILE_NAME}.centos6.x86_64.rpm --acl public-read"
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    centos-7:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-7:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - test-capture: (cd tests ; ./tests.pl)
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js | tr "-" "_"`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  fpm -s dir -t rpm -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d perl-libwww-perl -d perl-JSON -d ethtool -d libyaml-devel -d perl-LWP-Protocol-https /data/moloch
                  aws s3 cp --quiet moloch*.x86_64.rpm s3://files.molo.ch/moloch-${MOLOCH_FILE_NAME}.centos7.x86_64.rpm --acl public-read
                  aws s3api put-object-acl --bucket files.molo.ch --key moloch-${MOLOCH_FILE_NAME}.centos7.x86_64.rpm --acl public-read
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

#    ubuntu-14:
#        requires: [~pr, ~commit]
#        image: andywick/moloch-build-14:2.1.0
#        steps:
#            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
#            - ln -s /thirdparty .
#            - build: ./easybutton-build.sh --daq --pfring --rminstall
#            - test-capture: (cd tests ; ./tests.pl)
#            - export PATH=/data/moloch/bin:$PATH
#            - npm -g config set user root; npm -g config set cache-min 9999999
#            - installing: make install
#            - cp -r capture/plugins/lua/samples /data/moloch/lua
#            - build-package: |
#                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
#                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
#                  fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
#                  aws s3 cp --quiet moloch*amd64.deb s3://files.molo.ch/moloch-${MOLOCH_FILE_NAME}_ubuntu14_amd64.deb --acl public-read
#                  aws s3api put-object-acl --bucket files.molo.ch --key moloch-${MOLOCH_FILE_NAME}_ubuntu14_amd64.deb --acl public-read
#                fi
#        secrets:
#            - AWS_ACCESS_KEY_ID
#            - AWS_SECRET_ACCESS_KEY

    ubuntu-16:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-16:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - linting: (cd viewer ; npm run lint)
            - install-for-tests: (cd wiseService; npm ci --production)
            - run-es: (chown -R elasticsearch /elasticsearch-6.7.0; cd /elasticsearch-6.7.0 ; su elasticsearch -c "ES_JAVA_OPTS='-Xms700m -Xmx700m' bin/elasticsearch" > /tmp/es &)
            - test-capture: (cd tests ; ./tests.pl)
            - sleep 30
            - cat /tmp/es
            - test-viewer: (cd tests ; ./tests.pl --viewer)
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
                  aws s3 cp --quiet moloch*amd64.deb s3://files.molo.ch/moloch-${MOLOCH_FILE_NAME}_ubuntu16_amd64.deb --acl public-read
                  aws s3api put-object-acl --bucket files.molo.ch --key moloch-${MOLOCH_FILE_NAME}_ubuntu16_amd64.deb --acl public-read
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    ubuntu-18:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-18:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - apt-get update
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - test-capture: (cd tests ; ./tests.pl)
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
                  aws s3 cp --quiet moloch*amd64.deb s3://files.molo.ch/moloch-${MOLOCH_FILE_NAME}_ubuntu18_amd64.deb --acl public-read
                  aws s3api put-object-acl --bucket files.molo.ch --key moloch-${MOLOCH_FILE_NAME}_ubuntu18_amd64.deb --acl public-read
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    centos-7-sanitize:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-7:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: scl enable devtoolset-7 "./easybutton-build.sh --rminstall"
            - yum -y install libasan-static devtoolset-7-libasan-devel libasan4 devtoolset-7-libubsan-devel libubsan which java-1.8.0-openjdk-headless
            - build-sanitize: (cd capture; scl enable devtoolset-7 "make SANITIZE_FLAGS='-DMOLOCH_USE_MALLOC -fno-common -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer' sanitize")
            - test-capture: (cd tests ; ./tests.pl)
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - linting: (cd viewer ; npm run lint)
            - run-es: (chown -R elasticsearch /elasticsearch-6.7.0; cd /elasticsearch-6.7.0 ; su elasticsearch -c "ES_JAVA_OPTS='-Xms700m -Xmx700m' bin/elasticsearch" > /tmp/es &)
            - install-for-tests: (cd wiseService; npm ci --production)
            - sleep 30
            - cat /tmp/es
            - test-viewer: (cd tests ; G_SLICE=always-malloc ./tests.pl --viewer)
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js | tr "-" "_"`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  fpm -s dir -t rpm -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d perl-libwww-perl -d perl-JSON -d ethtool -d libyaml-devel -d libasan-static -d perl-LWP-Protocol-https /data/moloch
                  aws s3 cp --quiet moloch*.x86_64.rpm s3://files.molo.ch/sanitize/moloch-${MOLOCH_FILE_NAME}.centos7.x86_64.rpm --acl public-read
                  aws s3api put-object-acl --bucket files.molo.ch --key sanitize/moloch-${MOLOCH_FILE_NAME}.centos7.x86_64.rpm --acl public-read
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    ubuntu-16-sanitize:
        requires: [~pr, ~commit]
        image: andywick/moloch-build-16:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --rminstall
            - build-sanitize: (cd capture; make SANITIZE_FLAGS='-DMOLOCH_USE_MALLOC -fno-common -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer' sanitize)
            - export PATH=/data/moloch/bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - linting: (cd viewer ; npm run lint)
            - install-for-tests: (cd wiseService; npm ci --production)
            - run-es: (chown -R elasticsearch /elasticsearch-6.7.0; cd /elasticsearch-6.7.0 ; su elasticsearch -c "ES_JAVA_OPTS='-Xms700m -Xmx700m' bin/elasticsearch" > /tmp/es &)
            - test-capture: (cd tests ; ./tests.pl)
            - sleep 30
            - cat /tmp/es
            - test-viewer: (cd tests ; G_SLICE=always-malloc ./tests.pl --viewer)
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration $SD_BUILD_ID --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
                  aws s3 cp --quiet moloch*amd64.deb s3://files.molo.ch/sanitize/moloch-${MOLOCH_FILE_NAME}_ubuntu16_amd64.deb --acl public-read
                  aws s3api put-object-acl --bucket files.molo.ch --key sanitize/moloch-${MOLOCH_FILE_NAME}_ubuntu16_amd64.deb --acl public-read
                fi
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    slack:
        requires: [centos-6, centos-7, ubuntu-16, ubuntu-18]
        image: andywick/moloch-build-7:6
        annotations:
            beta.screwdriver.cd/cpu: LOW
            beta.screwdriver.cd/ram: LOW
        steps:
            - slack-success: |
                export MOLOCH_VERSION=`grep PACKAGE_VERSION= configure | sed "s/.*'\(.*\)'.*$/\1/"`
                echo MOLOCH_VERSION: $MOLOCH_VERSION
                if [ "$GIT_BRANCH" = "$MOLOCH_COPY_BRANCH" ]; then
                  MSG=`git log -1 --format=%s`
                  BODY="{\"icon_emoji\": \":sushi:\", \"username\": \"MolochBuild\", \"text\":\"It worked: $GIT_BRANCH - moloch-$MOLOCH_VERSION-$SD_BUILD_ID - $MSG\"}"
                  curl -XPOST -H "Content-type: application/json" --data "$BODY" $SLACK
                fi
        secrets:
            - SLACK

    release-build:
        image: andywick/moloch-build-6:2.1.0
        requires: []
        annotations:
            beta.screwdriver.cd/cpu: LOW
            beta.screwdriver.cd/ram: LOW
        steps:
            - echo "Hi!"

    release-centos-6:
        requires: [release-build]
        image: andywick/moloch-build-6:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: scl enable devtoolset-7 python27 "./easybutton-build.sh --daq --pfring --rminstall"
            - export PATH=/data/moloch/bin:$PWD/node_modules/.bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: scl enable devtoolset-7 python27 "make install"
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - npm install license-checker; release/notice.txt.pl /data/moloch NOTICE release/CAPTURENOTICE > /data/moloch/NOTICE.txt
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js | tr "-" "_"`
                scl enable rh-ruby23 "/opt/rh/rh-ruby23/root/usr/local/bin/fpm -s dir -t rpm -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration 1 --template-scripts --after-install 'release/afterinstall.sh' --url "https://molo.ch" --description 'Moloch Full Packet System' -d perl-libwww-perl -d perl-JSON -d ethtool -d libyaml-devel /data/moloch"
                scl enable python27 "aws s3 cp moloch-${MOLOCH_VERSION}-1.x86_64.rpm s3://files.molo.ch/builds/centos-6/ --acl public-read"
                ls -l *.rpm
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    release-centos-7:
        requires: [release-build]
        image: andywick/moloch-build-7:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - export PATH=/data/moloch/bin:$PWD/node_modules/.bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - npm install license-checker; release/notice.txt.pl /data/moloch NOTICE release/CAPTURENOTICE > /data/moloch/NOTICE.txt
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js | tr "-" "_"`
                fpm -s dir -t rpm -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration 1 --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d perl-libwww-perl -d perl-JSON -d ethtool -d libyaml-devel -d perl-LWP-Protocol-https /data/moloch
                aws s3 cp moloch-${MOLOCH_VERSION}-1.x86_64.rpm s3://files.molo.ch/builds/centos-7/ --acl public-read
                ls -l *.rpm
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

#    release-ubuntu-14:
#        requires: [release-build]
#        image: andywick/moloch-build-14:2.1.0
#        steps:
#            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
#            - ln -s /thirdparty .
#            - build: ./easybutton-build.sh --daq --pfring --rminstall
#            - export PATH=/data/moloch/bin:$PWD/node_modules/.bin:$PATH
#            - npm -g config set user root; npm -g config set cache-min 9999999
#            - installing: make install
#            - cp -r capture/plugins/lua/samples /data/moloch/lua
#            - npm install license-checker; release/notice.txt.pl /data/moloch NOTICE release/CAPTURENOTICE > /data/moloch/NOTICE.txt
#            - build-package: |
#                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
#                fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration 1 --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
#
#                aws s3 cp moloch_${MOLOCH_VERSION}-1_amd64.deb s3://files.molo.ch/builds/ubuntu-14.04/ --acl public-read
#                ls -l *.deb
#        secrets:
#            - AWS_ACCESS_KEY_ID
#            - AWS_SECRET_ACCESS_KEY

    release-ubuntu-16:
        requires: [release-build]
        image: andywick/moloch-build-16:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - export PATH=/data/moloch/bin:$PWD/node_modules/.bin:$PATH
            - npm -g config set user root; npm -g config set cache-min 9999999
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - npm install license-checker; release/notice.txt.pl /data/moloch NOTICE release/CAPTURENOTICE > /data/moloch/NOTICE.txt
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
                fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration 1 --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
                aws s3 cp moloch_${MOLOCH_VERSION}-1_amd64.deb s3://files.molo.ch/builds/ubuntu-16.04/ --acl public-read
                ls -l *.deb
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY

    release-ubuntu-18:
        requires: [release-build]
        image: andywick/moloch-build-18:2.1.0
        steps:
            - (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
            - ln -s /thirdparty .
            - build: ./easybutton-build.sh --daq --pfring --rminstall
            - export PATH=/data/moloch/bin:$PWD/node_modules/.bin:$PATH
            - npm -g config set user root
            - installing: make install
            - cp -r capture/plugins/lua/samples /data/moloch/lua
            - npm install license-checker; release/notice.txt.pl /data/moloch NOTICE release/CAPTURENOTICE > /data/moloch/NOTICE.txt
            - build-package: |
                export MOLOCH_VERSION=`sed 's/.*"\(.*\)\".*$/\1/' /data/moloch/viewer/version.js`
                fpm -s dir -t deb -n moloch -x data/moloch/logs -x data/moloch/raw -v $MOLOCH_VERSION --iteration 1 --template-scripts --after-install "release/afterinstall.sh" --url "https://molo.ch" --description "Moloch Full Packet System" -d libwww-perl -d libjson-perl -d ethtool -d libyaml-dev /data/moloch
                aws s3 cp moloch_${MOLOCH_VERSION}-1_amd64.deb s3://files.molo.ch/builds/ubuntu-18.04/ --acl public-read
                ls -l *.deb
        secrets:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
